{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/addtask.js","components/footer.js","components/about.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onclick","onClick","style","backgroundColor","className","defaultProps","Header","title","showf","show","location","useLocation","pathname","PropType","PropTypes","string","isRequired","Task","task","ondel","ontog","reminder","onDoubleClick","id","cursor","day","Tasks","map","Addtask","onadd","useState","settext","setday","setreminder","onSubmit","e","preventDefault","target","reset","alert","type","placeholder","onChange","value","checked","currentTarget","footer","to","about","App","setshow","tasks","setTasks","useEffect","a","fetchtasks","taskfromserver","gettask","fetch","res","json","data","fetchtask","addtask","method","headers","body","JSON","stringify","deltask","filter","tasktotoggle","updtask","path","exact","render","props","length","component","About","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e485714a.chunk.js","sourcesContent":["\r\nconst Button = ({color , text,onclick}) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <button onClick={onclick} style={{backgroundColor : color }} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps={\r\n    color: 'steelblue',\r\n    \r\n}\r\n  \r\n\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title ,showf,show}) => {\r\n\r\n    \r\n    const location =useLocation()\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1  >{title}</h1>\r\n{  location.pathname==='/'&& (     <Button color={ show ? \"red\":\"green\"} text={ show ? \"Close\":\"Add Task\"} onclick={showf}/>\r\n)}           \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\nHeader.PropType = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n\r\n\r\n// CSS in JS\r\n// const hs ={\r\n//     color: 'yellow' ,\r\n//      backgroundColor : 'black',\r\n// }\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task,ondel,ontog}) => {\r\n    return (\r\n        <div className={`task  ${task.reminder?'reminder' :\"\"}`} onDoubleClick={ ()=> ontog(task.id)}>\r\n            <h3>{task.text}  <FaTimes style={{color:'red' , cursor:'pointer' }} onClick={ () => ondel(task.id)} /> </h3>\r\n            <p>{task.day} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\n\r\n\r\nconst Tasks = ({task,ondel,ontog}) => {\r\n\r\n   \r\n\r\n    return ( \r\n        <>\r\n         {task.map((task) => (<Task key={task.id} task={task} ondel={ondel} ontog={ontog}/>))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\n\r\nimport { useState } from 'react'\r\n\r\nconst Addtask = ({ onadd }) => {\r\n\r\n    const [text,settext] = useState('')\r\n    const [day,setday] = useState('')\r\n    const [reminder,setreminder] = useState(false)\r\n\r\n    const onSubmit= (e) =>{\r\n         e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('add task')\r\n            return\r\n        }\r\n        if(!day){\r\n            alert('add day')\r\n            return\r\n        }\r\n\r\n        onadd({text,day,reminder})\r\n\r\n        settext('')\r\n        setday('')\r\n        setreminder(false)\r\n\r\n        e.target.reset()\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form className='add-form' onSubmit = {onSubmit} >\r\n                <div className=' form-control'>\r\n                    <label >Task</label>\r\n                    <input type='text' placeholder='Add Task' onChange={(e)=>settext(e.target.value)}/>\r\n                </div>\r\n                <div className=' form-control'>\r\n                    <label >Day</label>\r\n                    <input type='text' placeholder='Add Day' onChange={(e)=>setday(e.target.value)} />\r\n                </div>\r\n                <div className=' form-control form-control-check'>\r\n                    <label >Set Reminder</label>\r\n                    <input type='checkbox' checked={reminder} onChange={(e)=>setreminder(e.currentTarget.checked)} />\r\n                </div>\r\n\r\n                <input type='submit' value='Save Task' className='btn btn-block' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copy right &copy; 2021 </p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst about = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">GO back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default about\r\n","import './App.css';\n\n\nimport { BrowserRouter as Router , Route  } from 'react-router-dom';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport Addtask from './components/addtask'\nimport { useState ,useEffect} from 'react'\nimport Footer from './components/footer'\nimport About from './components/about'\n\n\nfunction App() {\n  const [show,setshow]=useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(()=> {\n    const gettask =async()=>{\n      const taskfromserver = await fetchtasks()\n      setTasks(taskfromserver)\n    }\n     \n\ngettask()\n\n  }, [])\n\n\n// fetch tasks\nconst fetchtasks =async () => {\nconst res = await fetch ('http://localhost:5000/task')\n\nconst data =await res.json()\n\nreturn data\n}\n\n\n// fetch task\nconst fetchtask =async (id) => {\n  const res = await fetch (`http://localhost:5000/task/${id}`)\n  \n  const data =await res.json()\n  \n  return data\n  }\n\n\n  // add task\n  const addtask = async(task) => {\n\n    const res = await fetch('http://localhost:5000/task',{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json'\n      },\n      body:JSON.stringify(task)\n    })\n\n    const data= await res.json()\n\n    setTasks([...tasks,data])\n\n\n\n\n    // const id = Math.floor((Math.random() * 1000)) + 1\n    \n    // const newtask = { id, ...task }\n    // setTasks([...tasks, newtask])\n  }\n\n\n  //delete task\n  const deltask = async (id) => {\n    \n    await fetch (`http://localhost:5000/task/${id}`,{method:'DELETE'})\n\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  // toggle reminder\n  const reminder = async(id) => {\n\n    const tasktotoggle =await fetchtask(id)\n    const updtask ={...tasktotoggle,reminder:!tasktotoggle.reminder}\n\n    const res =await fetch(`http://localhost:5000/task/${id}`,{\n      method:'PUT',\n      headers:{\n        'Content-type':'application/json'\n      },\n      body:JSON.stringify(updtask)\n      \n    })\n\n    const data =await res.json()\n\n   \n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n\n  }\n\n  return (\n    <Router>\n\n    <div className=\"container\">\n      <Header title=\"Task Tracker\" showf={()=>setshow(!show) } show={show} />\n      \n      <Route path='/' exact render={(props)=>(\n        <>\n             {show && < Addtask onadd={addtask} />} \n      {tasks.length > 0 ? <Tasks task={tasks} ondel={deltask} ontog={reminder} /> : \"No tasks\"}\n        </>\n      )}\n      />\n      <Route path='/about' component={About}/>\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}